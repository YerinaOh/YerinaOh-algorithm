I"e*<h2 id="sorted-array">Sorted Array</h2>
<p>https://leetcode.com/problems/game-of-life/</p>

<h3 id="주요내용">주요내용:</h3>
<p>이진배열 탐색하기</p>

<h3 id="rule">Rule:</h3>
<ol>
  <li>살아있는 이웃이 두 개 미만인 모든 살아있는 세포는 인구 부족으로 인한 것처럼 죽습니다.</li>
  <li>2 ~ 3 명의 살아있는 이웃이있는 모든 살아있는 세포는 다음 세대를 위해 살아갑니다.</li>
  <li>세 개 초과의 살아있는 이웃이있는 모든 살아있는 세포는 인구 과잉처럼 죽습니다.</li>
  <li>정확히 세 개의 살아있는 이웃이있는 죽은 세포는 마치 번식에 의한 것처럼 살아있는 세포가됩니다.</li>
</ol>

<h3 id="풀이법-블로그-참고하였음">풀이법 (블로그 참고하였음)</h3>

<p>여기서 다음세대로 갈 때 변경되는 사항들은 아래와같이 정리.</p>

<p>현재 죽음 - 다음 세대 생존 ⇒ 3
현재 생존 - 다음 세대 죽음 ⇒ 2</p>

<p>Example1:
Input: board = [[0,1,0],[0,0,1],[1,1,1],[0,0,0]]
Output: [[0,0,0],[1,0,1],[0,1,1],[0,1,0]]</p>

<p>Example2:
Input: board = [[1,1],[1,0]]
Output: [[1,1],[1,1]]</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">UIKit</span>

<span class="kd">class</span> <span class="kt">Solution</span> <span class="p">{</span>
    <span class="kd">func</span> <span class="nf">gameOfLife</span><span class="p">(</span><span class="n">_</span> <span class="nv">board</span><span class="p">:</span> <span class="k">inout</span> <span class="p">[[</span><span class="kt">Int</span><span class="p">]])</span> <span class="p">{</span> <span class="c1">// 2진배열 array</span>
        <span class="k">guard</span> <span class="n">board</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="p">{</span>
            <span class="k">return</span>
        <span class="p">}</span>
        
        <span class="k">let</span> <span class="nv">m</span> <span class="o">=</span> <span class="n">board</span><span class="o">.</span><span class="n">count</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="n">board</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">count</span>
        
        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">..&lt;</span><span class="n">m</span> <span class="p">{</span>
            <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="mi">0</span><span class="o">..&lt;</span><span class="n">n</span> <span class="p">{</span>
                <span class="nf">changeStatus</span><span class="p">(</span><span class="o">&amp;</span><span class="n">board</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">m</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">board</span> <span class="o">=</span> <span class="n">board</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="nv">$0</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="nv">$0</span> <span class="o">%</span> <span class="mi">2</span> <span class="p">}</span> <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="kd">private</span> <span class="kd">func</span> <span class="nf">changeStatus</span><span class="p">(</span><span class="n">_</span> <span class="nv">board</span><span class="p">:</span> <span class="k">inout</span> <span class="p">[[</span><span class="kt">Int</span><span class="p">]],</span> <span class="n">_</span> <span class="nv">i</span><span class="p">:</span> <span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">j</span><span class="p">:</span> <span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">m</span><span class="p">:</span> <span class="kt">Int</span><span class="p">,</span> <span class="n">_</span> <span class="nv">n</span><span class="p">:</span> <span class="kt">Int</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">var</span> <span class="nv">population</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1">// next generation 의 값</span>
    
        <span class="k">for</span> <span class="n">x</span> <span class="k">in</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="o">...</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">{</span> <span class="c1">// 앞의 값과 비교</span>
            <span class="k">for</span> <span class="n">y</span> <span class="k">in</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">...</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">{</span> <span class="c1">// 위의 값과 비교</span>
                <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="n">m</span> <span class="o">||</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="n">n</span> <span class="p">{</span> <span class="c1">// 모서리에 도달하면 contiunue</span>
                    <span class="nf">print</span><span class="p">(</span><span class="s">"i : </span><span class="se">\(</span><span class="n">i</span><span class="se">)</span><span class="s">, j : </span><span class="se">\(</span><span class="n">j</span><span class="se">)</span><span class="s">,x: </span><span class="se">\(</span><span class="n">x</span><span class="se">)</span><span class="s">,y: </span><span class="se">\(</span><span class="n">y</span><span class="se">)</span><span class="s">, popu:</span><span class="se">\(</span><span class="n">population</span><span class="se">)</span><span class="s">"</span><span class="p">)</span>
                    <span class="k">continue</span>
                <span class="p">}</span>
                <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="n">i</span> <span class="o">&amp;&amp;</span> <span class="n">y</span> <span class="o">==</span> <span class="n">j</span> <span class="p">{</span> <span class="c1">// 모서리에 도달하면 contiunue</span>
                    <span class="k">continue</span>
                <span class="p">}</span>
                <span class="c1">// 조건 2 : pop이 1이거나 / 2 이면 상태를 변경, 나머지는 유지</span>
                <span class="n">population</span> <span class="o">=</span> <span class="n">board</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">board</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span> <span class="p">?</span> <span class="n">population</span> <span class="o">+</span> <span class="mi">1</span> <span class="p">:</span> <span class="n">population</span>
            <span class="p">}</span>
        <span class="p">}</span>
        
        <span class="k">if</span> <span class="n">board</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="p">{</span> <span class="c1">//현재 살아있는 상태</span>
            <span class="c1">// 조건 1,3 : pop이 가뭄이거나 / 홍수이면 사망으로 설정, 나머지는 생존</span>
            <span class="n">board</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">population</span> <span class="o">&lt;</span> <span class="mi">2</span> <span class="o">||</span> <span class="n">population</span> <span class="o">&gt;</span> <span class="mi">3</span> <span class="p">?</span> <span class="mi">2</span> <span class="p">:</span> <span class="mi">1</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="c1">//현재 죽어있는 상태</span>
            <span class="c1">// 조건 4 : 3개의 이웃을 가지고있는 경우는 생존, 이외는 사망</span>
            <span class="n">board</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">population</span> <span class="o">==</span> <span class="mi">3</span> <span class="p">?</span> <span class="mi">3</span> <span class="p">:</span> <span class="mi">0</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">let</span> <span class="nv">solution</span> <span class="o">=</span> <span class="kt">Solution</span><span class="o">.</span><span class="nf">init</span><span class="p">()</span>
<span class="k">var</span> <span class="nv">board</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]]</span>
<span class="n">solution</span><span class="o">.</span><span class="nf">gameOfLife</span><span class="p">(</span><span class="o">&amp;</span><span class="n">board</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">board</span><span class="p">)</span>
</code></pre></div></div>
:ET