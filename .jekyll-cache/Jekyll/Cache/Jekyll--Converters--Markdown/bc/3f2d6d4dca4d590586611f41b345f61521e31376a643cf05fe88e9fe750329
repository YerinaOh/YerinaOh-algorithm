I"0
<h2 id="dp">DP</h2>
<p>https://leetcode.com/problems/maximum-subarray/</p>

<h3 id="주요내용">주요내용:</h3>
<p>DP 로 문제풀기</p>

<h3 id="rule">Rule:</h3>
<p>정수 배열 nums가 주어지면 합계가 가장 큰 연속 하위 배열 (최소 하나의 숫자 포함)을 찾아 합계를 반환한다.
max([i], [i] + [i - 1])</p>

<h3 id="time-complexity">time complexity</h3>
<p>O(N)</p>

<p>Example 1:</p>

<p>Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.</p>

<p>Example 2:</p>

<p>Input: nums = [1]
Output: 1</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">import</span> <span class="kt">UIKit</span>

<span class="kd">class</span> <span class="kt">MaximumSubarray</span> <span class="p">{</span>
    <span class="kd">func</span> <span class="nf">maxSubArray</span><span class="p">(</span><span class="nv">nums</span><span class="p">:</span> <span class="p">[</span><span class="kt">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
        <span class="k">var</span> <span class="nv">max_current</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
        <span class="k">var</span> <span class="nv">max_global</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
        
        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">1</span><span class="o">..&lt;</span><span class="n">nums</span><span class="o">.</span><span class="n">count</span> <span class="p">{</span>
            <span class="n">max_current</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">max_current</span> <span class="o">+</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
            <span class="n">max_global</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">max_current</span><span class="p">,</span> <span class="n">max_global</span><span class="p">)</span>
        <span class="p">}</span>
        
        <span class="k">return</span> <span class="n">max_global</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
:ET